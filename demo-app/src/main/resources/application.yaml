server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always
  shutdown: graceful

spring:
  application:
    name: demo-app
  datasource:
    url: jdbc:postgresql://${POSTGRES_SERVER:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB_NAME:postgres}?autoReconnect=true&useSSL=false&rewriteBatchedStatements=true&serverTimezone=UTC&createDatabaseIfNotExist=true&ApplicationName=${spring.application.name}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: ${HIKARI_MAXIMUM_POOL_SIZE:50}
      minimum-idle: ${HIKARI_MINIMUM_IDLE:10}
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
      max-lifetime: ${HIKARI_MAX_LIFETIME:300000}
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jpa:
    open-in-view: false
    database: POSTGRESQL
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    show-sql: false
    properties:
      hibernate:
        jdbc:
          batch_size: 500
          order_inserts: true
          batch_versioned_data: true
      hibernate.integration.envers.enabled: true
      hibernate.id.db_structure_naming_strategy: legacy
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: false
      hibernate.connection.provider_disables_autocommit: false
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
  liquibase:
    change-log: classpath:/liquibase/liquibase-changeLog.xml
    contexts: local
    enabled: true
  kafka:
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: ${spring.application.name}
      auto-offset-reset: latest
    producer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    event:
      default-topic: ${KAFKA_TOPIC:EVENT_TOPIC}
      group_id: ${spring.application.name}
  main:
    allow-bean-definition-overriding: true

logging:
  level:
    liquibase: debug
    org.springframework.data.r2dbc: debug

management:
  info:
    git:
      mode: full
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
